O erro desse c√≥digo era que p n√£o estava sendo liberado antes de receber uma nova aloca√ß√£o ou antes de terminar o programa. Ent√£o, adicionei 2 free(p) para liberar a mem√≥ria nesses dois casos e o programa funcionou com 0 erros.

Script started on 2023-04-07 10:54:03-03:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="139" LINES="12"]
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ gcc -g c13correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ [7mvalgrind --leak-check=full ./programa[27m[1Pvalgrind --leak-check=full ./program[K[K[K[K[K[K[Ka.out
[?2004l
==252== Memcheck, a memory error detector
==252== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==252== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==252== Command: ./a.out
==252== 
==252== 
==252== HEAP SUMMARY:
==252==     in use at exit: 35 bytes in 2 blocks
==252==   total heap usage: 3 allocs, 1 frees, 47 bytes allocated
==252== 
==252== 16 bytes in 1 blocks are definitely lost in loss record 1 of 2
==252==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==252==    by 0x1091A6: main (c13correto.c:11)
==252== 
==252== 19 bytes in 1 blocks are definitely lost in loss record 2 of 2
==252==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==252==    by 0x10917E: main (c13correto.c:8)
==252== 
==252== LEAK SUMMARY:
==252==    definitely lost: 35 bytes in 2 blocks
==252==    indirectly lost: 0 bytes in 0 blocks
==252==      possibly lost: 0 bytes in 0 blocks
==252==    still reachable: 0 bytes in 0 blocks
==252==         suppressed: 0 bytes in 0 blocks
==252== 
==252== For lists of detected and suppressed errors, rerun with: -s
==252== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ gcc -g c13correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ [7mvalgrind --leak-check=full ./programa[27m[1Pvalgrind --leak-check=full ./program[K[K[K[K[K[K[Ka.out
[?2004l
==258== Memcheck, a memory error detector
==258== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==258== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==258== Command: ./a.out
==258== 
==258== 
==258== HEAP SUMMARY:
==258==     in use at exit: 0 bytes in 0 blocks
==258==   total heap usage: 3 allocs, 3 frees, 47 bytes allocated
==258== 
==258== All heap blocks were freed -- no leaks are possible
==258== 
==258== For lists of detected and suppressed errors, rerun with: -s
==258== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ exit
[?2004l
exit

Script done on 2023-04-07 10:55:04-03:00 [COMMAND_EXIT_CODE="0"]
