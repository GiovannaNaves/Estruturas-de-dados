Primeiramente, tinhamos um erro de compila√ß√£o pois o codigo escrevia 10 bytes onde s√≥ havia espa√ßo para 8. Ent√£o mudei o malloc para 10 e rodei o c√≥digo.

Script started on 2023-04-07 10:41:55-03:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="139" LINES="12"]
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ gcc =g c11correto.c
[?2004l
[01m[Kc11correto.c:[m[K In function ‚Äò[01m[Kmain[m[K‚Äô:
[01m[Kc11correto.c:9:9:[m[K [01;35m[Kwarning: [m[K‚Äò[01m[K__builtin_memcpy[m[K‚Äô writing 10 bytes into a region of size 8 overflows the destination [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wstringop-overflow=-Wstringop-overflow=]8;;[m[K]
    9 |         [01;35m[Kstrcpy(msg, "Holberton")[m[K;
      |         [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[Kc11correto.c:8:21:[m[K [01;36m[Knote: [m[Kdestination object of size 8 allocated by ‚Äò[01m[Kmalloc[m[K‚Äô
    8 |         char *msg = [01;36m[Kmalloc(8)[m[K;
      |                     [01;36m[K^~~~~~~~~[m[K
/usr/bin/ld: n√£o foi poss√≠vel localizar g: Arquivo ou diret√≥rio inexistente
collect2: error: ld returned 1 exit status
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ gcc -g c11correto.c
[?2004l
[01m[Kc11correto.c:[m[K In function ‚Äò[01m[Kmain[m[K‚Äô:
[01m[Kc11correto.c:9:9:[m[K [01;35m[Kwarning: [m[K‚Äò[01m[K__builtin_memcpy[m[K‚Äô writing 10 bytes into a region of size 8 overflows the destination [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wstringop-overflow=-Wstringop-overflow=]8;;[m[K]
    9 |         [01;35m[Kstrcpy(msg, "Holberton")[m[K;
      |         [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[Kc11correto.c:8:21:[m[K [01;36m[Knote: [m[Kdestination object of size 8 allocated by ‚Äò[01m[Kmalloc[m[K‚Äô
    8 |         char *msg = [01;36m[Kmalloc(8)[m[K;
      |                     [01;36m[K^~~~~~~~~[m[K
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ gcc -g c11correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ [7mvalgrind --leak-check=full ./programa[27m[1Pvalgrind --leak-check=full ./program[K[K[K[K[K[K[K[K/a.out
[?2004l

Depois, o erro era que o espa√ßo na mem√≥ria n√£o estava sendo liberado, ent√£o adicionei um free(msg) e o c√≥digo funcionou perfeitamente.

==181== Memcheck, a memory error detector
==181== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==181== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==181== Command: ./a.out
==181== 
181, Rolberton
==181== 
==181== HEAP SUMMARY:
==181==     in use at exit: 10 bytes in 1 blocks
==181==   total heap usage: 2 allocs, 1 frees, 1,034 bytes allocated
==181== 
==181== 10 bytes in 1 blocks are definitely lost in loss record 1 of 1
==181==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==181==    by 0x10919E: main (c11correto.c:8)
==181== 
==181== LEAK SUMMARY:
==181==    definitely lost: 10 bytes in 1 blocks
==181==    indirectly lost: 0 bytes in 0 blocks
==181==      possibly lost: 0 bytes in 0 blocks
==181==    still reachable: 0 bytes in 0 blocks
==181==         suppressed: 0 bytes in 0 blocks
==181== 
==181== For lists of detected and suppressed errors, rerun with: -s
==181== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/On$ gcc -g c11correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ [7mvalgrind --leak-check=full ./programa[27m[1Pvalgrind --leak-check=full ./program[K[K[K[K[K[K[Ka.out
[?2004l
==199== Memcheck, a memory error detector
==199== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==199== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==199== Command: ./a.out
==199== 
199, Rolberton
==199== 
==199== HEAP SUMMARY:
==199==     in use at exit: 0 bytes in 0 blocks
==199==   total heap usage: 2 allocs, 2 frees, 1,034 bytes allocated
==199== 
==199== All heap blocks were freed -- no leaks are ped: 0 from 0)
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ exit
[?2004lexit

Script done on 2023-04-07 10:46:02-03:00 [COMMAND_EXIT_CODE="0"]
