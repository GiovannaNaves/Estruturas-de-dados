O realloc deveria ser feito diretamente no atributo data do array, e n√£o em um ponteiro criado para armazenar esse atributo.
Script started on 2023-04-06 21:30:37-03:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="85" LINES="12"]
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/A

ula3[00m$ gcc -g c6correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/A

ula3[00m$ [7mvalgrind --leak-check=full ./programa[27m
[C[C[C[C[C[C[1Pvalgrind --leak-check=full ./program[K[K[K[K[K[K[Ka.out
[?2004l
==211== Memcheck, a memory error detector
==211== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==211== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==211== Command: ./a.out
==211== 
==211== Invalid free() / delete / delete[] / realloc()
==211==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==211==    by 0x109215: main (c6correto.c:21)
==211==  Address 0x4a8d090 is 0 bytes inside a block of size 40 free'd
==211==    at 0x484DCD3: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==211==    by 0x1091B4: resizeArray (c6correto.c:12)
==211==    by 0x109202: main (c6correto.c:19)
==211==  Block was alloc'd at
==211==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==211==    by 0x1091EC: main (c6correto.c:18)
==211== 
==211== 
==211== HEAP SUMMARY:
==211==     in use at exit: 60 bytes in 1 blocks
==211==   total heap usage: 3 allocs, 3 frees, 116 bytes allocated
==211== 
==211== 60 bytes in 1 blocks are definitely lost in loss record 1 of 1
==211==    at 0x484DCD3: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==211==    by 0x1091B4: resizeArray (c6correto.c:12)
==211==    by 0x109202: main (c6correto.c:19)
==211== 
==211== LEAK SUMMARY:
==211==    definitely lost: 60 bytes in 1 blocks
==211==    indirectly lost: 0 bytes in 0 blocks
==211==      possibly lost: 0 bytes in 0 blocks
==211==    still reachable: 0 bytes in 0 blocks
==211==         suppressed: 0 bytes in 0 blocks
==211== 
==211== For lists of detected and suppressed errors, rerun with: -s
==211== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/A

ula3[00m$ 
[K[A]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K[A]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/A

ula3[00m$ 
[K[A]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/A

ula3[00m$ 
[K[A]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/A

ula3[00m$ gcc -g c6correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-

dados/Aula3[00m$ #include <stdlib.h>

#include <stdint.h>


struct _List {

    int32_t* data;

    int32_t length;

};

typedef struct _List List;


List* resizeArray(List* array) {

    int32_t* dPtr = array->data;

    dPtr = realloc(dPtr, 15 * sizeof(int32_t)); //doesn't update array->data
    return array;
[7m}[27m
[7mint main() {[27m
[7m    List* array = calloc(1, sizeof(List));[27m
[7m    array->data = calloc(10, sizeof(int32_t));[27m
[7m    array = resizeArray(array);[27m
[7m    free(array->data);[27m
[7m    free(array);[27m
[7m    return 0;[27m
[7m}[27m
}
int main() {
    List* array = calloc(1, sizeof(List));
    array->data = calloc(10, sizeof(int32_t));
    array = resizeArray(array);
    free(array->data);
    free(array);
    return 0;
}
[K[C
[K[K[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[K[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K
[K[K[K[C
[K[K[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[C[C[K
[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[7mvalgrind --leak-check=full ./programa[27m
[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pvalgrind --leak-check=full ./program[K[K[K[K[K[K[Ka.out
[?2004l
==235== Memcheck, a memory error detector
==235== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==235== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==235== Command: ./a.out
==235== 
==235== 
==235== HEAP SUMMARY:
==235==     in use at exit: 0 bytes in 0 blocks
==235==   total heap usage: 3 allocs, 3 frees, 116 bytes allocated
==235== 
==235== All heap blocks were freed -- no leaks are possible
==235== 
==235== For lists of detected and suppressed errors, rerun with: -s
==235== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-

dados/Aula3[00m$ exit
[?2004l
exit

Script done on 2023-04-06 21:36:52-03:00 [COMMAND_EXIT_CODE="0"]
