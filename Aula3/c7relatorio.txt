Foi alocado um espa√ßo a menos no alfabeto do que o necess√°rio para preencher com todos os caracteres indicados. Logo, trocamos a aloca√ß√£o de 26 para 27 sizeof(char) e resolvemos o problema.

Script started on 2023-04-06 21:39:42-03:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="78" LINES="12"]
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-

dados/Aula3[00m$ gcc -g c7correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-

dados/Aula3[00m$ [7mvalgrind --leak-check=full ./programa[27m
[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pvalgrind --leak-check=full ./program[K[K[K[K[K[K[Ka.out
[?2004l
==256== Memcheck, a memory error detector
==256== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==256== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==256== Command: ./a.out
==256== 
==256== Invalid write of size 1
==256==    at 0x1091BC: main (c7correto.c:10)
==256==  Address 0x4a8d05a is 0 bytes after a block of size 26 alloc'd
==256==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==256==    by 0x109183: main (c7correto.c:5)
==256== 
==256== 
==256== HEAP SUMMARY:
==256==     in use at exit: 0 bytes in 0 blocks
==256==   total heap usage: 1 allocs, 1 frees, 26 bytes allocated
==256== 
==256== All heap blocks were freed -- no leaks are possible
==256== 
==256== For lists of detected and suppressed errors, rerun with: -s
==256== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-

dados/Aula3[00m$ gcc -g c7correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-

dados/Aula3[00m$ [7mvalgrind --leak-check=full ./programa[27m
[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pvalgrind --leak-check=full ./program[K[K[K[K[K[K[Ka.out
[?2004l
==262== Memcheck, a memory error detector
==262== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==262== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==262== Command: ./a.out
==262== 
==262== 
==262== HEAP SUMMARY:
==262==     in use at exit: 0 bytes in 0 blocks
==262==   total heap usage: 1 allocs, 1 frees, 27 bytes allocated
==262== 
==262== All heap blocks were freed -- no leaks are possible
==262== 
==262== For lists of detected and suppressed errors, rerun with: -s
==262== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-

dados/Aula3[00m$ exit
[?2004l
exit

Script done on 2023-04-06 21:41:06-03:00 [COMMAND_EXIT_CODE="0"]
