Apenas tirei os coment√°rios dos c√≥digos que n√£o estavam sendo utilizados para que eles passassem a funcionar.

Script started on 2023-04-06 18:46:05-03:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="139" LINES="10"]
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ [7mvalgrind --leak-check+full[27mvalgrind --leak-check+full ./a.out
[?2004l
valgrind: Unknown option: --leak-check+full
valgrind: Use --help for more information or consult the user manual.
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ gcc -g c4correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ [7mvalgrind --leak-check=full[27mvalgrind --leak-check=full ./a.out
[?2004l
==126== Memcheck, a memory error detector
==126== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==126== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==126== Command: ./a.out
==126== 
==126== Use of uninitialised value of size 8
==126==    at 0x10917A: main (c4correto.c:13)
==126== 
==126== Invalid write of size 4
==126==    at 0x10917A: main (c4correto.c:13)
==126==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==126== 
==126== 
==126== Process terminating with default action of signal 11 (SIGSEGV)
==126==  Access not within mapped region at address 0x0
==126==    at 0x10917A: main (c4correto.c:13)
==126==  If you believe this happened as a result of a stack
==126==  overflow in your program's main thread (unlikely but
==126==  possible), you can try to increase the size of the
==126==  main thread stack using the --main-stacksize= flag.
==126==  The main thread stack size used in this run was 8388608.
==126== 
==126== HEAP SUMMARY:
==126==     in use at exit: 0 bytes in 0 blocks
==126==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==126== 
==126== All heap blocks were freed -- no leaks are possible
==126== 
==126== Use --track-origins=yes to see where uninitialised values come from
==126== For lists of detected and suppressed errors, rerun with: -s
==126== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Falha de segmenta√ß√£o
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ g

cc -g c4correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/A

ula3[00m$ [7mvalgrind --leak-check=full[27m
[C[C[C[C[C[Cvalgrind --leak-check=full ./a.out
[?2004l
==159== Memcheck, a memory error detector
==159== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==159== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==159== Command: ./a.out
==159== 
==159== Use of uninitialised value of size 8
==159==    at 0x10917A: main (c4correto.c:13)
==159== 
==159== Invalid write of size 4
==159==    at 0x10917A: main (c4correto.c:13)
==159==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==159== 
==159== 
==159== Process terminating with default action of signal 11 (SIGSEGV)
==159==  Access not within mapped region at address 0x0
==159==    at 0x10917A: main (c4correto.c:13)
==159==  If you believe this happened as a result of a stack
==159==  overflow in your program's main thread (unlikely but
==159==  possible), you can try to increase the size of the
==159==  main thread stack using the --main-stacksize= flag.
==159==  The main thread stack size used in this run was 8388608.
==159== 
==159== HEAP SUMMARY:
==159==     in use at exit: 0 bytes in 0 blocks
==159==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==159== 
==159== All heap blocks were freed -- no leaks are possible
==159== 
==159== Use --track-origins=yes to see where uninitialised values come from
==159== For lists of detected and suppressed errors, rerun with: -s
==159== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Falha de segmenta√ß√£o
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/A

ula3[00m$ gcc -g c4correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/A

ula3[00m$ [7mvalgrind --leak-check=full[27m
[C[C[C[C[C[Cvalgrind --leak-check=full ./a.out
[?2004l
==165== Memcheck, a memory error detector
==165== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==165== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==165== Command: ./a.out
==165== 
==165== Conditional jump or move depends on uninitialised value(s)
==165==    at 0x484B235: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==165==    by 0x109209: main (c4correto.c:18)
==165== 
==165== 
==165== HEAP SUMMARY:
==165==     in use at exit: 0 bytes in 0 blocks
==165==   total heap usage: 6 allocs, 6 frees, 112 bytes allocated
==165== 
==165== All heap blocks were freed -- no leaks are possible
==165== 
==165== Use --track-origins=yes to see where uninitialised values come from
==165== For lists of detected and suppressed errors, rerun with: -s
==165== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/A

ula3[00m$ gcc -g c4correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/A

ula3[00m$ [7mvalgrind --leak-check=full[27m
[C[C[C[C[C[Cvalgrind --leak-check=full ./a.out
[?2004l
==171== Memcheck, a memory error detector
==171== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==171== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==171== Command: ./a.out
==171== 
==171== 
==171== HEAP SUMMARY:
==171==     in use at exit: 0 bytes in 0 blocks
==171==   total heap usage: 6 allocs, 6 frees, 112 bytes allocated
==171== 
==171== All heap blocks were freed -- no leaks are possible
==171== 
==171== For lists of detected and suppressed errors, rerun with: -s
==171== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/A

ula3[00m$ exit
[?2004l
exit

Script done on 2023-04-06 21:23:20-03:00 [COMMAND_EXIT_CODE="0"]
