O problema desse c√≥digo era que a variavel fact estava sendo utilizada sem ter sido iniciada, ent√£o a iniciei com o valor 1. Al√©m disso, adicionei um return 0 no final da fun√ß√£o.

Script started on 2023-04-07 10:56:23-03:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="139" LINES="12"]
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ gcc -g c14correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ [7mvalgrind --leak-check=full ./programa[27m[1Pvalgrind --leak-check=full ./program[K[K[K[K[K[K[Ka.out
[?2004l
==280== Memcheck, a memory error detector
==280== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==280== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==280== Command: ./a.out
==280== 
Positive integer:4
==280== Conditional jump or move depends on uninitialised value(s)
==280==    at 0x48D8B56: __vfprintf_internal (vfprintf-internal.c:1516)
==280==    by 0x48C281E: printf (printf.c:33)
==280==    by 0x10920D: main (c14correto.c:12)
==280== 
==280== Use of uninitialised value of size 8
==280==    at 0x48BC33B: _itoa_word (_itoa.c:177)
==280==    by 0x48D7B3D: __vfprintf_internal (vfprintf-internal.c:1516)
==280==    by 0x48C281E: printf (printf.c:33)
==280==    by 0x10920D: main (c14correto.c:12)
==280== 
==280== Conditional jump or move depends on uninitialised value(s)
==280==    at 0x48BC34C: _itoa_word (_itoa.c:177)
==280==    by 0x48D7B3D: __vfprintf_internal (vfprintf-internal.c:1516)
==280==    by 0x48C281E: printf (printf.c:33)
==280==    by 0x10920D: main (c14correto.c:12)
==280== 
==280== Conditional jump or move depends on uninitialised value(s)
==280==    at 0x48D8643: __vfprintf_internal (vfprintf-internal.c:1516)
==280==    by 0x48C281E: printf (printf.c:33)
==280==    by 0x10920D: main (c14correto.c:12)
==280== 
==280== Conditional jump or move depends on uninitialised value(s)
==280==    at 0x48D7C85: __vfprintf_internal (vfprintf-internal.c:1516)
==280==    by 0x48C281E: printf (printf.c:33)
==280==    by 0x10920D: main (c14correto.c:12)
==280== 
Factorial 4 = 0
==280== 
==280== HEAP SUMMARY:
==280==     in use at exit: 0 bytes in 0 blocks
==280==   total heap usage: 2 allocs, 2 frees, 2,048 bytes allocated
==280== 
==280== All heap blocks were freed -- no leaks are possible
==280== 
==280== Use --track-origins=yes to see where uninitialised values come from
==280== For lists of detected and suppressed errors, rerun with: -s
==280== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ 
[K]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ gcc -g c14correto.c
[?2004l
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ [7m#include <stdio.h>[27m


[7mint main(void) {[27m

[7m  int n, i, fact;[27m


[7m  printf("Positive integer:");[27m

[7m  scanf("%d", &n);[27m

[7m  [27m

[7m  for(i = 1; i<=n; i++) [27m

[7m    fact = fact*i;[27m


[7m  printf("Factorial %d = %d\n", n, fact);[27m

[7m}[27m[A[A[A[A[A[A[A[A[A[A[A[A
]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ #include <stdio.h>


int main(void) {

  int n, i, fact;


  printf("Positive integer:");

  scanf("%d", &n);

  

  for(i = 1; i<=n; i++) 

    fact = fact*i;


  printf("Factorial %d = %d\n", n, fact);

[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[C[C[K
[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[K[A[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[7mvalgrind --leak-check=full ./programa[27m[1Pvalgrind --leak-check=full ./program[K[K[K[K[K[K[Ka.out
[?2004l
==293== Memcheck, a memory error detector
==293== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==293== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==293== Command: ./a.out
==293== 
Positive integer:4
Factorial 4 = 24
==293== 
==293== HEAP SUMMARY:
==293==     in use at exit: 0 bytes in 0 blocks
==293==   total heap usage: 2 allocs, 2 frees, 2,048 bytes allocated
==293== 
==293== All heap blocks were freed -- no leaks are possible
==293== 
==293== For lists of detected and suppressed errors, rerun with: -s
==293== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;gionaves@Flavia: /mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[01;32mgionaves@Flavia[00m:[01;34m/mnt/c/Users/giona/OneDrive/√Årea de Trabalho/aa/Estruturas-de-dados/Aula3[00m$ exit
[?2004l
exit

Script done on 2023-04-07 11:58:19-03:00 [COMMAND_EXIT_CODE="0"]
